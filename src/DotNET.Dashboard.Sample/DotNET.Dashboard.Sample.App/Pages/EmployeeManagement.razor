@page "/employee-management"

@using DotNET.Dashboard.Sample.Core.Employee.ListEmployees
@using Syncfusion.Blazor.Grids

@inject ListEmployeesQueryHandler listEmployeeQueryHandler

<h3>EmployeeManagement</h3>

<div style="max-width:900px">
    <SfGrid DataSource="@employeeData" >
        <GridColumns>
            <GridColumn IsPrimaryKey="true" Field="@nameof(EmployeeModel.Id)" Width="50px"></GridColumn>
            <GridColumn HeaderText="First Name" Field="@nameof(EmployeeModel.FirstName)"></GridColumn>
            <GridColumn HeaderText="Last Name" Field="@nameof(EmployeeModel.LastName)"></GridColumn>
            <GridColumn HeaderText="Designation" Field="@nameof(EmployeeModel.EmployeeJobTitleId)" Width="100px"></GridColumn>
            <GridColumn Field="@nameof(EmployeeModel.Gender)" Width="100px"></GridColumn>
            <GridColumn HeaderText="DOB" Field="@nameof(EmployeeModel.DateOfBirth)" Format="d"></GridColumn>
            <GridColumn HeaderText="Reports" Field="@nameof(EmployeeModel.ReportToEmpId)" Width="100px"></GridColumn>
        </GridColumns>
    </SfGrid>
</div>

@code {
    private List<EmployeeModel>? employeeData = null;
    //private List<string> toolbar = new List<string> { "Add", "Edit", "Update", "Cancel", "Search" };

    protected override async Task OnInitializedAsync()
    {
        var result = await listEmployeeQueryHandler.Run(new ListEmployeesQuery());
        employeeData = result.EmployeeList;
    }
}
